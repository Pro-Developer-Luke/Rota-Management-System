<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>